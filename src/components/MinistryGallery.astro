---
import { Image as ImageIcon } from 'lucide-astro';

interface FacebookImage {
    id: string;
    source: string;
    created_time: string;
    caption?: string;
    album?: string;
}

interface GalleryImage {
    src: string;
    alt: string;
    category: string;
    date: string;
}

// Fallback images
const fallbackImages: GalleryImage[] = [
    {
        src: "placeholder",
        alt: "Altar Servers during Mass",
        category: "Liturgical Service",
        date: new Date().toLocaleDateString()
    },
    {
        src: "placeholder",
        alt: "Community Outreach Program",
        category: "Community Service",
        date: new Date().toLocaleDateString()
    },
    {
        src: "placeholder",
        alt: "Formation Session",
        category: "Formation",
        date: new Date().toLocaleDateString()
    },
    {
        src: "placeholder",
        alt: "Parish Procession",
        category: "Events",
        date: new Date().toLocaleDateString()
    },
    {
        src: "placeholder",
        alt: "Easter Sunday Mass",
        category: "Liturgical Service",
        date: new Date().toLocaleDateString()
    },
    {
        src: "placeholder",
        alt: "Ministry Gathering",
        category: "Fellowship",
        date: new Date().toLocaleDateString()
    }
];
---

<div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-[#205488] mb-4">
            Our Ministry in Action
        </h2>
        <div class="w-20 h-1 bg-yellow-400 mx-auto mb-4 rounded-full"></div>
        <p class="text-gray-600 max-w-2xl mx-auto">
            Glimpses of our service, fellowship, and community engagement.
        </p>
    </div>

    <div id="ministry-gallery-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {fallbackImages.map((image, index) => (
            <div class="group relative overflow-hidden rounded-xl aspect-[4/3] gallery-item skeleton-loader">
                <div class="w-full h-full flex items-center justify-center bg-gray-100">
                    <ImageIcon class="w-12 h-12 text-gray-400" />
                </div>
            </div>
        ))}
    </div>

    <div class="text-center mt-12">
        <a href="/gallery" class="inline-flex items-center px-6 py-3 rounded-full bg-[#205488] text-white hover:bg-[#205488]/90 transition-all duration-300 group">
            View Full Gallery
            <span class="ml-2 transform group-hover:translate-x-1 transition-transform duration-300">â†’</span>
        </a>
    </div>
</div>

<style>
    .gallery-item {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

    .gallery-item.visible {
        opacity: 1;
        transform: translateY(0);
    }

    .skeleton-loader {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }

    @keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
    }

    /* Add transition delays for staggered effect */
    .gallery-item:nth-child(2) { transition-delay: 0.1s; }
    .gallery-item:nth-child(3) { transition-delay: 0.2s; }
    .gallery-item:nth-child(4) { transition-delay: 0.3s; }
    .gallery-item:nth-child(5) { transition-delay: 0.4s; }
    .gallery-item:nth-child(6) { transition-delay: 0.5s; }

    /* Make items visible by default if reduced motion is preferred */
    @media (prefers-reduced-motion: reduce) {
        .gallery-item {
            opacity: 1;
            transform: none;
            transition: none;
        }
    }
</style>

<script>
    async function loadMinistryGallery() {
        try {
            const response = await fetch('/api/facebook-images');
            if (!response.ok) throw new Error('Failed to fetch images');
            
            const data = await response.json();
            if (!data.success || !data.images) throw new Error('Invalid response data');

            // Flatten and sort images
            const allImages = Object.values(data.images as Record<string, any[]>)
                .flat()
                .sort((a, b) => new Date(b.created_time).getTime() - new Date(a.created_time).getTime())
                .slice(0, 6); // Get only the 6 latest images

            const galleryGrid = document.getElementById('ministry-gallery-grid');
            if (!galleryGrid) return;

            // Clear existing content
            galleryGrid.innerHTML = '';

            // Add images to grid
            allImages.forEach((image: any) => {
                const date = new Date(image.created_time).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });

                galleryGrid.innerHTML += `
                    <div class="group relative overflow-hidden rounded-xl aspect-[4/3] gallery-item">
                        <img
                            src="${image.source}"
                            alt="${image.caption || 'Ministry Gallery Image'}"
                            class="w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-700"
                            loading="lazy"
                        />
                        <div class="absolute inset-0 bg-gradient-to-t from-[#205488]/90 via-[#205488]/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                            <div class="absolute bottom-0 left-0 right-0 p-6 translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                                <span class="inline-block px-3 py-1 bg-yellow-400 text-[#205488] text-sm font-medium rounded-full mb-2">
                                    ${image.album || 'Ministry Events'}
                                </span>
                                ${image.caption ? `
                                    <h3 class="text-white text-lg font-semibold mb-2 line-clamp-2 hover:line-clamp-none transition-all duration-300">
                                        ${image.caption}
                                    </h3>
                                ` : ''}
                                <p class="text-gray-100 text-sm">
                                    ${date}
                                </p>
                            </div>
                        </div>
                    </div>
                `;
            });

            // Initialize animations
            initializeGallery();

        } catch (error) {
            console.error('Error loading ministry gallery:', error);
            // Keep fallback images if fetch fails
        }
    }

    function initializeGallery() {
        document.querySelectorAll('.gallery-item').forEach(item => {
            item.classList.remove('visible');
        });

        // Force a reflow
        document.body.offsetHeight;

        document.querySelectorAll('.gallery-item').forEach(item => {
            item.classList.add('visible');
        });
    }

    // Initialize on page load and after view transitions
    document.addEventListener('astro:page-load', () => {
        initializeGallery();
        loadMinistryGallery();
    });
</script> 
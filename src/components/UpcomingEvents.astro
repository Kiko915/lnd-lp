---
import { Calendar, MapPin, Clock, Image as ImageIcon } from 'lucide-astro';
import { Client as Appwrite, Databases, Query, type Models } from 'node-appwrite';

interface Event extends Models.Document {
    title: string;
    description: string;
    date: string;
    location: string;
    category: string;
    image: string;
    registration_link?: string;
    is_past_event: boolean;
    contact_email: string;
    social_media_links: string[];
}

// Initialize Appwrite
const client = new Appwrite();
client
    .setEndpoint(import.meta.env.PUBLIC_APPWRITE_ENDPOINT)
    .setProject(import.meta.env.PUBLIC_APPWRITE_PROJECT_ID)
    .setKey(import.meta.env.PUBLIC_APPWRITE_API_KEY);

const databases = new Databases(client);

// Fetch events data
let events: Event[] = [];
const now = new Date().toISOString();

try {
    // First try to get upcoming events
    const upcomingEvents = await databases.listDocuments<Event>(
        import.meta.env.PUBLIC_APPWRITE_DATABASE_ID,
        import.meta.env.PUBLIC_APPWRITE_EVENTS_COLLECTION_ID,
        [
            Query.greaterThan('date', now),
            Query.orderAsc('date'),
            Query.limit(3)
        ]
    );
    
    // If no upcoming events, get all events
    if (upcomingEvents.documents.length === 0) {
        const allEvents = await databases.listDocuments<Event>(
            import.meta.env.PUBLIC_APPWRITE_DATABASE_ID,
            import.meta.env.PUBLIC_APPWRITE_EVENTS_COLLECTION_ID,
            [
                Query.orderDesc('date'),
                Query.limit(3)
            ]
        );
        events = allEvents.documents;
    } else {
        events = upcomingEvents.documents;
    }
} catch (error) {
    console.error('Error fetching events:', error);
}

// Helper function to format date
const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
};

// Helper function to format time
const formatTime = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleTimeString('en-US', {
        hour: '2-digit',
        minute: '2-digit'
    });
};
---

<div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
        <h2 class="text-3xl md:text-4xl font-bold text-[#205488] mb-4">
            Upcoming Events
        </h2>
        <div class="w-20 h-1 bg-yellow-400 mx-auto mb-4 rounded-full"></div>
        <p class="text-gray-600 max-w-2xl mx-auto">
            Join us in our upcoming activities and be part of our growing community of altar servers.
        </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
        {events.map((event) => (
            <div class="group relative bg-white rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300">
                {/* Image Container */}
                <div class="relative h-52 overflow-hidden rounded-t-2xl">
                    {event.image === "placeholder" ? (
                        <div class="absolute inset-0 flex items-center justify-center bg-gray-50">
                            <ImageIcon class="w-12 h-12 text-gray-300" />
                        </div>
                    ) : (
                        <img 
                            src={event.image} 
                            alt={event.title}
                            class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500"
                        />
                    )}
                    <div class="absolute inset-0 bg-gradient-to-t from-[#205488]/90 via-[#205488]/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                </div>

                {/* Event Tag */}
                <div class="absolute top-4 right-4">
                    <span class="px-3 py-1 bg-yellow-400 text-[#205488] text-sm font-medium rounded-full shadow-md">
                        {event.category}
                    </span>
                </div>

                {/* Content Container */}
                <div class="p-6">
                    <h3 class="text-xl font-bold text-[#205488] mb-4 line-clamp-2 group-hover:text-yellow-500 transition-colors duration-300">
                        {event.title}
                    </h3>
                    
                    <div class="space-y-3">
                        <div class="flex items-center text-gray-600">
                            <div class="w-8 h-8 bg-gray-50 rounded-lg flex items-center justify-center mr-3">
                                <Calendar class="w-4 h-4 text-yellow-500" />
                            </div>
                            <span class="text-sm font-medium">{formatDate(event.date)}</span>
                        </div>
                        
                        <div class="flex items-center text-gray-600">
                            <div class="w-8 h-8 bg-gray-50 rounded-lg flex items-center justify-center mr-3">
                                <Clock class="w-4 h-4 text-yellow-500" />
                            </div>
                            <span class="text-sm">{formatTime(event.date)}</span>
                        </div>
                        
                        <div class="flex items-center text-gray-600">
                            <div class="w-8 h-8 bg-gray-50 rounded-lg flex items-center justify-center mr-3">
                                <MapPin class="w-4 h-4 text-yellow-500" />
                            </div>
                            <span class="text-sm">{event.location}</span>
                        </div>
                    </div>

                    {/* Learn More Link */}
                    <div class="mt-6 pt-4 border-t border-gray-100">
                        <a href={`/events/${event.$id}`} 
                           class="inline-flex items-center text-[#205488] font-medium hover:text-yellow-500 transition-colors duration-300">
                            Learn More
                            <span class="ml-2 transform group-hover:translate-x-1 transition-transform duration-300">→</span>
                        </a>
                    </div>
                </div>
            </div>
        ))}
    </div>

    {events.length === 0 && (
        <div class="flex flex-col items-center justify-center py-20">
            <img 
                src="/images/no-events-icon.png" 
                alt="No events available"
                class="w-32 h-32 mb-6"
            />
            <p class="text-gray-600 text-lg max-w-md text-center">
                There are currently no upcoming events. Please check back later!
            </p>
        </div>
    )}

    <div class="text-center">
        <a href="/events" class="inline-flex items-center px-8 py-4 rounded-full bg-[#205488] text-white hover:bg-[#205488]/90 transition-all duration-300 group shadow-lg hover:shadow-xl">
            View All Events
            <span class="ml-2 transform group-hover:translate-x-1 transition-transform duration-300">→</span>
        </a>
    </div>
</div>

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

---
import Layout from '../../layouts/Layout.astro';
import type { Props as SEOProps } from '../../components/SEO.astro';
import { getCollection, type CollectionEntry, render } from 'astro:content';
import '../../assets/css/markdown.css';
import 'sweetalert2/dist/sweetalert2.css';

export const prerender = true;

export async function getStaticPaths() {
    const newsPosts = await getCollection('news');
    return newsPosts.map((post: NewsPost) => ({
        params: { slug: post.slug },
        props: {}
    }));
}

const { slug } = Astro.params;

// Define types for news content
type NewsPost = CollectionEntry<'news'>;
type Author = {
    name: string;
    bio?: string;
    avatar?: string;
    role?: string;
};

// Fetch all news posts
const newsPosts = await getCollection('news');
const newsItem = newsPosts.find((post: NewsPost) => post.slug === slug);

if (!newsItem) {
    return Astro.redirect('/404');
}

// Fetch full author details if author name exists
if (newsItem?.data.author) {
    const authors = await getCollection('authors');
    const author = authors.find((a: CollectionEntry<'authors'>) => a.data.name === newsItem.data.author);
    if (author) {
        newsItem.data.author = {
            ...author.data,
            name: author.data.name,
            bio: author.data.bio,
            avatar: author.data.avatar,
            role: author.data.role
        };
    }
}

console.log(newsItem.data.author);

// Render markdown content
const { Content } = await render(newsItem);

// Format date helper
const formatDate = (date: string | Date) => {
    return new Date(date).toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
};

// Get related posts (same tags, excluding current)
const relatedPosts = newsPosts
    .filter((post: NewsPost) => 
        post.id !== newsItem.id &&
        post.data.tags.some((tag: string) => newsItem.data.tags.includes(tag))
    )
    .slice(0, 3);
---



<Layout
  title={`${newsItem.data.title} | Lingkod Ng Dambana`}
  description={newsItem.data.excerpt}
  image={new URL(newsItem.data.thumbnail, Astro.url.origin).href}
  type="article"
  publishedTime={newsItem.data.date}
  author={newsItem.data.author?.name}
>
    <main class="fade-in">
        <!-- Article Header -->
        <section class="relative min-h-[60vh] flex items-end bg-[#205488] overflow-hidden">
            <div class="absolute inset-0 -z-10">
                <div class="absolute inset-0 pattern-grid opacity-5"></div>
                <div class="absolute inset-0 logo-pattern opacity-[0.09] bg-repeat"></div>
                <div class="absolute inset-0 bg-gradient-to-b from-[#205488]/30 via-[#205488]/50 to-[#205488]"></div>
                <div class="absolute inset-0 bg-gradient-to-r from-[#205488]/30 via-[#205488]/50 to-[#205488]"></div>
                <div class="absolute -bottom-20 -right-20 w-96 h-96 bg-[#FDC83D]/10 rounded-full blur-3xl"></div>
            </div>
            
            <div class="container mx-auto px-4 sm:px-6 lg:px-8 pb-12 md:pb-20 animate-fade-in-up">
                <div class="max-w-4xl mx-auto">
                    <div class="text-white">
                        <div class="flex flex-wrap items-center gap-4 mb-6">
                            {newsItem.data.featured && (
                                <span class="px-4 py-1.5 bg-[#FDC83D] text-[#205488] rounded-full text-sm font-semibold shadow-md hover:shadow-lg transition-shadow duration-300">
                                    Featured
                                </span>
                            )}
                            <span class="text-sm font-medium text-white/80">
                                {formatDate(newsItem.data.date)}
                            </span>
                        </div>
                        <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold mb-8 px-4 sm:px-0 leading-tight">
                            {newsItem.data.title}
                        </h1>
                        <div class="flex flex-col sm:flex-row items-start sm:items-center gap-6 px-4 sm:px-0">
                            {newsItem.data.author && (
                                <div class="group relative">
                                    <div class="flex flex-col sm:flex-row items-start sm:items-center gap-6">
                                        <div class="w-14 h-14 sm:w-12 sm:h-12 rounded-full overflow-hidden border-2 border-[#FDC83D]/30 hover:border-[#FDC83D]/50 transition-all duration-300">
                                            <img 
                                                src={newsItem.data.author.avatar} 
                                                alt={newsItem.data.author.name}
                                                class="w-full h-full object-cover"
                                            />
                                        </div>
                                        <div class="text-sm">
                                            <p class="font-medium">{newsItem.data.author.name}</p>
                                            <p class="text-white/80">{newsItem.data.author.role}</p>
                                        </div>
                                    </div>
                                    
                                    <div class="hidden sm:block absolute z-20 left-0 top-20 opacity-0 group-hover:opacity-100 transition-all duration-200 translate-y-2 group-hover:translate-y-0 pointer-events-none group-hover:pointer-events-auto">
                                        <div class="bg-white p-4 rounded-lg shadow-xl w-64 border border-slate-100 transform transition-all duration-200 scale-95 group-hover:scale-100" style="margin-top: 1rem">
                                            <div class="flex items-center gap-3">
                                                <div class="w-12 h-12 rounded-full overflow-hidden">
                                                    <img 
                                                        src={newsItem.data.author.avatar} 
                                                        alt={newsItem.data.author.name}
                                                        class="w-full h-full object-cover"
                                                    />
                                                </div>
                                                <div>
                                                    <p class="font-semibold text-slate-800">{newsItem.data.author.name}</p>
                                                    {newsItem.data.author.role && (
                                                        <p class="text-sm text-slate-500">{newsItem.data.author.role}</p>
                                                    )}
                                                </div>
                                            </div>
                                            <p class="mt-3 text-sm text-slate-600 leading-relaxed">
                                                {newsItem.data.author.bio}
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Article Content -->
        <section class="py-12 md:py-20 bg-white">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="max-w-4xl mx-auto">
                    <div>
                        <div class="aspect-w-16 aspect-h-9 mb-8 rounded-none sm:rounded-xl overflow-hidden">
                            <img 
                                src={newsItem.data.thumbnail} 
                                alt={newsItem.data.title}
                                class="w-full h-full object-cover"
                            />
                        </div>
                        
                        <div class="mb-8">
                            <p class="text-xl text-slate-600 leading-relaxed">
                                {newsItem.data.excerpt}
                            </p>
                        </div>

                        <div class="prose prose-lg max-w-none">
                            <section id="news-content">
                                <Content />
                            </section>
                        </div>

                        <!-- Share Buttons -->
                        <div class="mt-12">
                            <h3 class="text-xl font-bold text-[#205488] mb-4">Share this article</h3>
                            <div class="flex flex-col sm:flex-row gap-3">
                                <a 
                                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.href)}&hashtag=%23LNDLiliw&quote=${encodeURIComponent(`Check out this article from Lingkod Ng Dambana: "${newsItem.data.title}" - ${Astro.url.href}`)}`}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    class="flex items-center justify-center gap-2 px-4 py-2 bg-[#1877F2] text-white rounded-lg hover:bg-[#166FE5] transition-colors text-sm sm:text-base"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"/>
                                    </svg>
                                    <span>Facebook</span>
                                </a>
                                <a 
                                    href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(Astro.url.href)}&text=${encodeURIComponent(`Check out this article from Lingkod Ng Dambana: "${newsItem.data.title}" - ${Astro.url.href} #LNDLiliw #CatholicYouth`)}`}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    class="flex items-center justify-center gap-2 px-4 py-2 bg-[#1DA1F2] text-white rounded-lg hover:bg-[#1A8CD8] transition-colors text-sm sm:text-base"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
                                    </svg>
                                    <span>Twitter</span>
                                </a>
                                <button
                                    onclick="navigator.clipboard.writeText(window.location.href).then(() => Swal.fire({
                                        toast: true,
                                        position: 'bottom-end',
                                        icon: 'success',
                                        title: 'Link copied to clipboard!',
                                        showConfirmButton: false,
                                        timer: 3000,
                                        timerProgressBar: true
                                    }))"
                                    class="flex items-center justify-center gap-2 px-4 py-2 bg-[#205488] text-white rounded-lg hover:bg-[#3270a6] transition-colors text-sm sm:text-base"
                                >
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M8 5v14h11v-2h-9v-10h-2zm12 0v16h-14v-16h14zm2-2h-18v20h18v-20z"/>
                                    </svg>
                                    <span>Copy Link</span>
                                </button>
                            </div>
                        </div>
                        </div>

                        {newsItem.data.tags && newsItem.data.tags.length > 0 && (
                            <div class="mt-8">
                                <h3 class="text-xl font-bold text-[#205488] mb-4">Tags</h3>
                                <div class="flex flex-wrap gap-2">
                                    {newsItem.data.tags.map((tag: string) => (
                                        <a 
                                            href={`/news?tag=${encodeURIComponent(tag)}`}
                                            class="px-3 py-1.5 bg-[#205488]/10 text-[#205488] rounded-full text-sm hover:bg-[#205488]/20 transition-colors"
                                        >
                                            {tag}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        )}

                    <!-- Related Posts -->
                    {relatedPosts.length > 0 && (
                        <div class="mt-20">
                            <h2 class="text-3xl font-bold text-[#205488] mb-8">Related News</h2>
                            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                                {relatedPosts.map((post: NewsPost) => (
                                    <a href={`/news/${post.slug}`} class="bg-white rounded-lg sm:rounded-xl shadow-sm overflow-hidden group hover:shadow-lg transition-all duration-300">
                                        <div class="aspect-w-16 aspect-h-9 bg-gray-100">
                                            <img 
                                                src={post.data.thumbnail} 
                                                alt={post.data.title} 
                                                class="w-full h-full object-cover"
                                            />
                                        </div>
                                        <div class="p-6">
                                            <span class="text-slate-500 text-sm">{formatDate(post.data.date)}</span>
                                            <h3 class="text-xl font-bold text-[#205488] mt-2 mb-3 group-hover:text-[#3270a6] transition-colors">
                                                {post.data.title}
                                            </h3>
                                            <p class="text-slate-600 mb-4">
                                                {post.data.excerpt}
                                            </p>
                                        </div>
                                    </a>
                                ))}
                            </div>
                        </div>
                    )}
                </div>
            </div>
        </section>
    </main>
</Layout>

<script>
    import Swal from 'sweetalert2';
    
    // Declare window properties for TypeScript
    declare global {
        interface Window {
            Swal: typeof Swal;
            Toast: typeof Swal;
        }
    }
    
    // Toast configuration
    const Toast = Swal.mixin({
        toast: true,
        position: 'bottom-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer);
            toast.addEventListener('mouseleave', Swal.resumeTimer);
        }
    });

    // Initialize Swal globally
    window.Swal = Swal;
    window.Toast = Toast;
</script>

<style>
    .pattern-grid {
        background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.2) 1px, transparent 0);
        background-size: 24px 24px;
    }

    .logo-pattern {
        background-image: url('../../assets/logo-pattern.png');
    }

    .aspect-w-16 {
        position: relative;
        padding-bottom: 56.25%;
    }

    .aspect-w-16 > * {
        position: absolute;
        height: 100%;
        width: 100%;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }
</style>

---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import { Phone, Mail, MapPin, Clock, MessageCircle } from 'lucide-astro';


const contactInfo = [
    {
        icon: Phone,
        title: "Phone",
        value: "+63 927 340 1548",
        link: "tel:+639273401548"
    },
    {
        icon: Mail,
        title: "Email",
        value: "lnd.liliw@gmail.com",
        link: "mailto:lnd.liliw@gmail.com"
    },
    {
        icon: MapPin,
        title: "Location",
        value: "St. John the Baptist Parish, Liliw, Laguna",
        link: "https://maps.google.com/?q=St.+John+the+Baptist+Parish+Liliw+Laguna"
    },
    {
        icon: Clock,
        title: "Office Hours",
        value: "Saturday - Sunday, 9:00 AM - 5:00 PM",
        link: null
    },
    {
        icon: MessageCircle,
        title: "Social Media",
        value: "FB: @LNDLiliw",
        link: "https://facebook.com/LNDLiliw"
    }
];
---

<Layout 
  title="Contact Us | Lingkod Ng Dambana - Liliw, Laguna"
  description="Get in touch with Lingkod Ng Dambana, a Catholic altar server ministry in St. John the Baptist Parish, Liliw, Laguna. Contact us for inquiries, prayer requests, or to join our ministry."
  image="https://lndliliw.org/images/lnd-publicity-logo.png"
  canonical="https://lndliliw.org/contact"
  type="website"
>
    <main class="bg-gray-50">
        <!-- Hero Section -->
        <section class="relative min-h-[70vh] flex items-center justify-center bg-[#205488]">
            <div class="absolute inset-0">
                <div class="absolute inset-0 pattern-grid opacity-5"></div>
                <div class="absolute inset-0 logo-pattern opacity-[0.09] bg-repeat"></div>
                {/* Gradient Overlay */}
                <div class="absolute inset-0 bg-gradient-to-b from-[#205488]/50 via-[#205488]/30 to-[#205488]"></div>
            </div>
            
            <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-20">
                <div class="text-center max-w-4xl mx-auto">
                    <span class="inline-block text-yellow-400 text-lg md:text-xl font-medium mb-4 animate-fade-in tracking-wide">
                        Get in Touch with Us
                    </span>
                    <h1 class="text-5xl md:text-6xl lg:text-7xl font-bold text-white mb-8 animate-fade-in leading-tight">
                        Contact <span class="text-yellow-400">Information</span>
                    </h1>
                    <p class="text-white text-lg md:text-xl max-w-2xl mx-auto animate-fade-in-up leading-relaxed">
                        Get in touch with us to learn more about joining our ministry or for any inquiries about our services and activities.
                    </p>
                    <div class="mt-12 flex items-center justify-center gap-6 animate-fade-in-up space-x-3" style="animation-delay: 0.4s;">
                        <a href="#contact-form" class="inline-flex items-center gap-2 bg-yellow-400 text-[#205488] px-8 py-4 rounded-xl font-semibold hover:bg-yellow-300 transition-all duration-300 transform hover:scale-[1.02] hover:shadow-lg hover:shadow-yellow-400/20">
                            Send Message
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M5 12h14M12 5l7 7-7 7"/>
                            </svg>
                        </a>
                        <a href="#map" class="inline-flex items-center gap-2 bg-white/10 text-white px-8 py-4 rounded-xl font-semibold hover:bg-white/20 transition-all duration-300">
                            View Location
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                                <circle cx="12" cy="10" r="3"/>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>
        </section>

        <!-- Contact Info & Form Section -->
        <section class="py-20 -mt-10">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="bg-white rounded-3xl shadow-xl p-6 md:p-12 relative overflow-hidden">
                    <div class="relative grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-20">
                        <!-- Contact Information -->
                        <div class="space-y-8 animate-fade-in-left">
                            <div class="inline-block">
                                <h2 class="text-2xl md:text-3xl font-bold text-[#205488] mb-2">
                                    Get in Touch
                                </h2>
                                <div class="w-20 h-1 bg-yellow-400 rounded-full"></div>
                            </div>
                            <div class="space-y-6">
                                {contactInfo.map(item => (
                                    <div class="flex items-start gap-4 p-6 rounded-2xl hover:bg-gray-50 transition-all duration-300 group border border-gray-100 hover:border-yellow-200 hover:shadow-lg hover:shadow-yellow-100/50">
                                        <div class="flex-shrink-0">
                                            <div class="w-12 h-12 bg-yellow-400/10 rounded-xl flex items-center justify-center transform group-hover:scale-110 transition-transform duration-300">
                                                <item.icon class="w-6 h-6 text-yellow-500" />
                                            </div>
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900 mb-1">
                                                {item.title}
                                            </h3>
                                            {item.link ? (
                                                <a href={item.link} 
                                                   class="text-[#205488] hover:text-yellow-500 transition-colors duration-300">
                                                    {item.value}
                                                </a>
                                            ) : (
                                                <p class="text-gray-600">{item.value}</p>
                                            )}
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>

                        <!-- Contact Form -->
                        <div class="relative">
                            <div class="inline-block mb-8">
                                <h2 class="text-2xl md:text-3xl font-bold text-[#205488] mb-2">
                                    Send Message
                                </h2>
                                <div class="w-20 h-1 bg-yellow-400 rounded-full"></div>
                            </div>
                            <form class="space-y-6" id="contact-form">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div class="form-group">
                                        <label class="block text-gray-700 mb-2 font-medium" for="name">Your Name</label>
                                        <input type="text" id="name" name="name" 
                                               class="w-full px-4 py-3 rounded-xl border border-gray-200 focus:border-yellow-400 focus:ring-4 focus:ring-yellow-400/20 transition-all duration-300 bg-gray-50/50"
                                               required>
                                    </div>
                                    <div class="form-group">
                                        <label class="block text-gray-700 mb-2 font-medium" for="email">Email Address</label>
                                        <input type="email" id="email" name="email" 
                                               class="w-full px-4 py-3 rounded-xl border border-gray-200 focus:border-yellow-400 focus:ring-4 focus:ring-yellow-400/20 transition-all duration-300 bg-gray-50/50"
                                               required>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="block text-gray-700 mb-2 font-medium" for="subject">Subject</label>
                                    <input type="text" id="subject" name="subject" 
                                           class="w-full px-4 py-3 rounded-xl border border-gray-200 focus:border-yellow-400 focus:ring-4 focus:ring-yellow-400/20 transition-all duration-300 bg-gray-50/50"
                                           required>
                                </div>
                                <div class="form-group">
                                    <label class="block text-gray-700 mb-2 font-medium" for="message">Message</label>
                                    <textarea id="message" name="message" rows="5" 
                                              class="w-full px-4 py-3 rounded-xl border border-gray-200 focus:border-yellow-400 focus:ring-4 focus:ring-yellow-400/20 transition-all duration-300 bg-gray-50/50"
                                              maxlength="1000"
                                              required></textarea>
                                    <div class="mt-1 text-sm text-gray-500 flex justify-end">
                                        <span id="char-count">0</span>/1000 characters
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <div class="flex items-start space-x-3">
                                        <input type="checkbox" id="terms" name="terms" required
                                               class="mt-1 w-5 h-5 rounded border-gray-200 text-[#205488] focus:ring-[#205488]/50">
                                        <label for="terms" class="text-gray-700">
                                            I have read and agree to the 
                                            <a href="/privacy-policy" class="text-[#205488] hover:text-yellow-500">Privacy Policy</a> 
                                            and 
                                            <a href="/terms" class="text-[#205488] hover:text-yellow-500">Terms & Conditions</a>
                                        </label>
                                    </div>
                                </div>

                                <button type="submit" 
                                        class="w-full bg-[#205488] text-white font-semibold px-8 py-4 rounded-xl hover:bg-[#205488]/90 transition-all duration-300 transform hover:scale-[1.02] hover:shadow-lg hover:shadow-[#205488]/20">
                                    Send Message
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Map Section -->
        <section class="py-20" id="map">
            <div class="container mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-16">
                    <span class="text-yellow-500 text-lg font-medium mb-4 block">Our Location</span>
                    <h2 class="text-3xl md:text-4xl font-bold text-[#205488] mb-4">
                        Find Us on Google Maps
                    </h2>
                    <div class="w-24 h-1 bg-yellow-400 mx-auto mb-6 rounded-full"></div>
                    <p class="text-gray-600 text-lg max-w-2xl mx-auto">
                        Visit us at St. John the Baptist Parish, Liliw, Laguna. We're looking forward to meeting you!
                    </p>
                </div>
                <div class="rounded-3xl overflow-hidden shadow-2xl animate-fade-in-up bg-white p-2">
                    <div class="rounded-2xl overflow-hidden">
                        <iframe 
                            src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d965.9419363524356!2d121.43572255514519!3d14.130123008221926!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0:0x0!2zMTTCsDA3JzQ4LjQiTiAxMjHCsDI2JzA4LjYiRQ!5e0!3m2!1sen!2sph!4v1708612345678!5m2!1sen!2sph"
                            width="100%" 
                            height="600" 
                            style="border:0;" 
                            allowfullscreen="" 
                            loading="lazy" 
                            referrerpolicy="no-referrer-when-downgrade"
                            class="hover:opacity-95 transition-opacity duration-300">
                        </iframe>
                    </div>
                </div>
            </div>
        </section>
    </main>
</Layout>

<style>
    .pattern-grid {
        background-image: radial-gradient(circle at 2px 2px, rgba(255,255,255,0.2) 1px, transparent 0);
        background-size: 24px 24px;
    }

    .logo-pattern {
        background-image: url('../assets/logo-pattern.png');
    
    }

    .animate-fade-in {
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards;
    }

    .animate-fade-in-up {
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.8s ease-out forwards;
        animation-delay: 0.2s;
    }

    .animate-fade-in-left {
        opacity: 0;
        transform: translateX(-20px);
        animation: fadeInLeft 0.8s ease-out forwards;
        animation-delay: 0.3s;
    }

    .animate-fade-in-right {
        opacity: 0;
        transform: translateX(20px);
        animation: fadeInRight 0.8s ease-out forwards;
        animation-delay: 0.3s;
    }

    @keyframes fadeIn {
        to {
            opacity: 1;
        }
    }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeInLeft {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @keyframes fadeInRight {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    /* Form focus animations */
    .form-group {
        position: relative;
        transition: all 0.3s ease;
    }

    .form-group:focus-within label {
        color: #205488;
        transform: translateY(-2px);
    }
</style>

<script>
    import Swal from 'sweetalert2';
    
    // Character counter
    const messageTextarea = document.getElementById('message') as HTMLTextAreaElement;
    const charCount = document.getElementById('char-count');

    if (messageTextarea && charCount) {
        messageTextarea.addEventListener('input', () => {
            const count = messageTextarea.value.length;
            charCount.textContent = count.toString();
            
            // Visual feedback as user approaches limit
            if (count > 950) {
                charCount.className = 'text-red-600';
            } else if (count > 900) {
                charCount.className = 'text-yellow-600';
            } else {
                charCount.className = '';
            }
        });
    }

    // Toast configuration
    const Toast = Swal.mixin({
        toast: true,
        position: 'top',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer);
            toast.addEventListener('mouseleave', Swal.resumeTimer);
        }
    });

    // Form submission handling
    const form = document.getElementById('contact-form') as HTMLFormElement;
    
    if (form) {
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
            if (!submitButton) return;

            const originalButtonText = submitButton.textContent || 'Send Message';
            submitButton.textContent = 'Sending...';
            submitButton.disabled = true;

            // Validate terms acceptance
            const termsCheckbox = document.getElementById('terms') as HTMLInputElement;
            if (!termsCheckbox.checked) {
                await Toast.fire({
                    icon: 'error',
                    title: 'Please accept the Privacy Policy and Terms & Conditions'
                });
                return;
            }

            try {
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());

                const response = await fetch('/api/contact', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const contentType = response.headers.get('content-type');
                if (!contentType || !contentType.includes('application/json')) {
                    throw new TypeError("Oops, we haven't got JSON!");
                }

                const result = await response.json();

                if (result.success) {
                    await Toast.fire({
                        icon: 'success',
                        title: 'Thank you for your message! We will get back to you soon.'
                    });
                    form.reset();
                } else {
                    throw new Error(result.error || 'Failed to send message');
                }
            } catch (error) {
                console.error('Error:', error);
                await Toast.fire({
                    icon: 'error',
                    title: 'Sorry, there was an error sending your message. Please try again later.'
                });
            } finally {
                submitButton.textContent = originalButtonText;
                submitButton.disabled = false;
            }
        });
    }
</script>
